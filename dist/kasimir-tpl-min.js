/**
 * Infracamp's Kasimir Templates
 *
 * A no-dependency render on request
 *
 * @author Matthias Leuffen <m@tth.es>
 */
class KtRenderable extends HTMLTemplateElement{renderRecursive(e,t){if("function"!=typeof e.render)for(let s of e.childNodes)this.renderRecursive(s,t);else e.render(t)}}function kt_tpl(e){if(e instanceof KtTpl)return e;let t=document.getElementById(e);if(t instanceof KtTpl)return t;throw`Selector '${e}' is not a <kt-tpl> element`}class KtFor extends KtRenderable{constructor(){super(),this.elements=[],this.params={forselect:null,foridx:"idx",foreval:null}}static get observedAttributes(){return["forselect","foridx","foreval"]}attributeChangedCallback(e,t,s){this.params[e]=s}render(context){let select=context[this.params.forselect];if("object"!=typeof select)throw console.warn(`Invalid forSelect="${this.params.forselect}" returned:`,select,"on context",context,"(Element: ",this.outerHTML,")"),"Invalid forSelect selector. see waring.";for(let e=this.elements.length;e<select.length;e++){let e=this.content.cloneNode(!0),t=[];for(let s of e.childNodes)t.push(s);this.elements.push({node:t}),this.parentElement.insertBefore(e,this.nextSibling)}for(let idx=0;idx<select.length;idx++){context[this.params.foridx]=idx,context.self=select[idx],null!==this.params.foreval&&eval(this.params.foreval);for(let e of this.elements[idx].node)this.renderRecursive(e,context)}for(let e=this.elements.length;select.length<this.elements.length;e++){let e=this.elements.pop();for(let t of e.node)this.parentElement.removeChild(t)}}}customElements.define("kt-for",KtFor,{extends:"template"});class KtTpl extends HTMLElement{constructor(){super(),this.elements=[],this.params={stmt:null}}renderRecursive(e,t){if("function"!=typeof e.render)for(let s of e.childNodes)this.renderRecursive(s,t);else e.render(t)}static get observedAttributes(){return["stmt"]}attributeChangedCallback(e,t,s){this.params[e]=s}render(e){for(let t of this.childNodes)this.renderRecursive(t,e)}}customElements.define("kt-tpl",KtTpl);class KtVal extends HTMLElement{constructor(){super(),this.elements=[],this.params={stmt:null}}static get observedAttributes(){return["stmt"]}attributeChangedCallback(e,t,s){this.params[e]=s}render(context){this.innerText=JSON.stringify(eval(this.params.stmt))}}customElements.define("kt-val",KtVal);