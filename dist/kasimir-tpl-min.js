/**
 * Infracamp's Kasimir Templates
 *
 * A no-dependency render on request
 *
 * @author Matthias Leuffen <m@tth.es>
 */
class KT_Renderable extends HTMLElement{constructor(){super(),this.state={parentTpls:[]}}cloneNode(e){let t=this.state,s=super.cloneNode(e);return s.state=t,s}dump(){let e={sub:[],elem:this};for(let t of this.state.parentTpls)e.sub.push(t.dump());return e}render(e){for(let t=0;t<this.state.parentTpls.length;t++)this.state.parentTpls[t].render(e)}}class KT_Template extends KT_Renderable{constructor(){super(),this.isRendered=!1}render(e){!1===this.isRendered&&(this.appendChild(this.state.origNode.cloneNode(!0)),this.isRendered=!0);for(let t=0;t<this.state.parentTpls.length;t++)this.state.parentTpls[t].render(e);console.log("Dump from tpl: ",this.dump())}mount(e){return this}}customElements.define("x-kt-template",KT_Template);class KT_ForDirective extends KT_Renderable{constructor(){super()}static applies(e){return e.hasAttribute("ngFor")}static apply(e,t){t.getAttribute("ngFor");console.log(result)}render(e){let t=new RegExp("let (\\w+) of ([a-zA-Z0-9_.]+)"),s=(t=t.exec(this.state.ngFor))[2],r=t[1],n=e[s];console.log(e,n);for(let e=this.state.parentTpls.length;e<n.length;e++){let e=this.state.origNode.cloneNode(!0);this.state.parentTpls.push(e),console.log("append",e,"to",this.outerHTML),this.append(e)}for(let t=0;t<n.length;t++)console.log("Refresh",t,`with scope[${r}] = '${n[t]}'`),e[r]=n[t],e.idx=t,this.state.parentTpls[t].render(e)}}customElements.define("x-kt-for-directive",KT_ForDirective);class KT_ForElement extends KT_Renderable{constructor(){super(),console.log("Forelement construct"),this.isRendered=!1}render(e){this.appendChild(this.state.origNode.cloneNode(!0)),this.isRendered=!0,super.render(e),console.log("Render forelement",this.outerHTML,"in scope",e)}}customElements.define("x-kt-for-element",KT_ForElement);class Renderer{constructor(){this.directives=[KT_ForDirective]}_parse(e,t){let s=null,r=null;if(console.log("run",e),e.hasAttribute("ngFor")){r=e,e=e.cloneNode(!0),(s=new KT_ForDirective).state.ngFor=e.getAttribute("ngFor");let n=new KT_ForElement;n.state.origNode=e,s.state.origNode=n,t.state.parentTpls.push(s),t=n}for(let s=0;s<e.children.length;s++)this._parse(e.children.item(s),t);null===s||r.replaceWith(s)}getTemplate(e){let t=new KT_Template;if(e instanceof HTMLTemplateElement){let s=e.content.children.item(0);console.log("Template start",s),e.parentElement.ownerDocument.adoptNode(s),t.state.origNode=s.cloneNode(!0),e.parentElement.appendChild(t),this._parse(s,t)}else t.state.origNode=e,this._parse(e,t);return t}}